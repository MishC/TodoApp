// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodosApi.Data;

#nullable disable

namespace TodosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TodosApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryDescription = "Appointment at offices, government institutions, doctor's",
                            Name = "Appointments"
                        },
                        new
                        {
                            Id = 2,
                            CategoryDescription = "Todos related to family and friends",
                            Name = "Family&Friends"
                        },
                        new
                        {
                            Id = 3,
                            CategoryDescription = "Sport activities",
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 4,
                            CategoryDescription = "Work-related tasks",
                            Name = "Job"
                        },
                        new
                        {
                            Id = 5,
                            CategoryDescription = "Buy things",
                            Name = "Shopping"
                        },
                        new
                        {
                            Id = 6,
                            CategoryDescription = "Beauty procedures",
                            Name = "Beauty & Wellness"
                        },
                        new
                        {
                            Id = 7,
                            CategoryDescription = "What to do at home",
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("TodosApi.Models.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeCompleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CurrentDate = new DateTime(2024, 12, 11, 20, 29, 21, 912, DateTimeKind.Local).AddTicks(2282),
                            IsCompleted = false,
                            Priority = false,
                            Title = "Run for 30 min"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CurrentDate = new DateTime(2024, 12, 11, 20, 29, 21, 917, DateTimeKind.Local).AddTicks(9902),
                            IsCompleted = false,
                            Priority = true,
                            Title = "Take kids from the school before 4.20pm"
                        });
                });

            modelBuilder.Entity("TodosApi.Models.TodoItem", b =>
                {
                    b.HasOne("TodosApi.Models.Category", "Category")
                        .WithMany("Todos")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TodosApi.Models.Category", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
